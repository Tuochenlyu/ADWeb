@model ADWeb.ViewModels.UserViewModel

@{
    Layout = "~/Views/Shared/_Users.cshtml";
    ViewBag.Title = Model.GivenName + " " + Model.Initial + " " + Model.Surname;
}

@section headSection {
    <style type="text/css">
        .update-details {
            padding-left: 20px;
        }
        
        #new-groups-list input[type=text] {
            background-color: transparent;
            border: 0px solid;
            width: 100%;
        }

        .ui-widget {
            font-size: 1em;
            font-family: Georgia, Times;
        }

        .ui-menu {
                list-style: lower-alpha;
                padding: 10px;
                margin: 0;
                display:block;
                width:227px;
        }
        .ui-menu .ui-menu {
                margin-top: -3px;
        }
        .ui-menu .ui-menu-item {
                margin:0;
                padding: 0;
                width: 200px;
        }

    </style>

    <script type="text/javascript">
        $(function () {

            $('[data-toggle="tooltip"]').tooltip();

            $('#add-user-to-groups').click(function (e) {
                e.preventDefault();
                $('#add-user-to-groups-panel').toggle();
                $('#search-groups').focus();
            });

            var rowIndex = 0;
            $("#search-groups").autocomplete({
                minLength: 2,
                source: '@Url.Action("SearchForGroups")'
            });
            
            $("#btnAddNewGroup").click(function () {
                var groupName = $("#search-groups").val();

                if (groupName == "") {
                    alert("Group Name cannot be blank! Please type in a name of the group that you wish to add to this User Template.");
                    return;
                }

                $("#new-groups-list").append("<li><input type=\"text\" name=\"Groups[" + rowIndex + "]\" value=\"" + groupName + "\" readonly=\"true\" /></li>");
                $("#search-groups").val("").focus();
                rowIndex++;
            });
        });
    </script>
}

<h2>@Model.GivenName @Model.Surname</h2>
<p>Click on the tabs below to view the information for this user.</p>

@if(@TempData["user_created_successfully"] != null)
{
    <div class="alert alert-info alert-dismissable fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span aria-hidden="true">&times;</span>
            <span class="sr-only">Close</span>
        </button>
        <span>@TempData["user_created_successfully"]</span>
    </div>
}

@if(@TempData["user_updated_successfully"] != null)
{
    <div class="alert alert-info alert-dismissable fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span aria-hidden="true">&times;</span>
            <span class="sr-only">Close</span>
        </button>
        <span>@TempData["user_updated_successfully"]</span>
    </div>
}

@if(@TempData["groups_added_successfully"] != null)
{
    <div class="alert alert-info alert-dismissable fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span aria-hidden="true">&times;</span>
            <span class="sr-only">Close</span>
        </button>
        <span>@TempData["groups_added_successfully"]</span>
    </div>
}

<ul class="nav nav-tabs nav-justified" role="tablist" id="userInfo">
    <li role="presentation" class="active">
        <a href="#basic-info" role="tab" data-toggle="tab">Basic Info</a>
    </li>
    <li role="presentation">
        <a href="#user-groups" role="tab" data-toggle="tab">User Groups</a>
    </li>
    <li role="presentation">
        <a href="#user-history" role="tab" data-toggle="tab">Update History</a>
    </li>
</ul>


<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="basic-info">
        <p>Use the fields below to view and edit the information for this user. 
        Note: When updating this users, all fields that are marked with an asterisk (*) are required fields.</p>
        @Html.ValidationSummary()
        @using(Html.BeginForm("UpdateUser", "Users", FormMethod.Post, new { @class="form-horizontal", role="form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="SamAccountName" class="col-sm-2 control-label">Username</label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.SamAccountName, new { @readonly="readonly", @class="form-control" })
                    <span class="help-block">To rename the account click @Html.ActionLink("here", "RenameUser", "Users", new { userId = Model.SamAccountName}, null).</span>
                </div>
            </div>
            
            <div class="form-group">
                <label for="FirstName" class="col-sm-2 control-label">First Name*</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.GivenName, new { @class="form-control", autofocus="autofocus" })
                    @Html.ValidationMessageFor(m => m.GivenName)
                </div>
            </div>
            
            <div class="form-group">
                <label for="MiddleName" class="col-sm-2 control-label">Middle Name</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.MiddleName, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.MiddleName)
                </div>
            </div>
            
            <div class="form-group">
                <label for="LastName" class="col-sm-2 control-label">Last Name*</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Surname, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.Surname)
                </div>
            </div>
            
            <div class="form-group">
                <label for="Displayname" class="col-sm-2 control-label">Display Name*</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.DisplayName, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.DisplayName)
                </div>
            </div>
            
            <div class="form-group">
                <label for="Email" class="col-sm-2 control-label">Email*</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.EmailAddress, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.EmailAddress)
                </div>
            </div>
            
            <div class="form-group">
                <label for="PhoneNumber" class="col-sm-2 control-label">Phone #</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class="form-control" })
                </div>
            </div>
            
            <div class="form-group">
                <label for="Title" class="col-sm-2 control-label">Title</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Title, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.Title)
                </div>
            </div>
                        
            <div class="form-group">
                <label for="Department" class="col-sm-2 control-label">Department</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Department, new { @class="form-control" })
                </div>
            </div>
            
            <div class="form-group">
                <label for="Company" class="col-sm-2 control-label">Company*</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Company, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.Company)
                </div>
            </div>
            
            <div class="form-group">
                <label for="Notes" class="col-sm-2 control-label">Notes</label>
                <div class="col-sm-8">
                    @Html.TextAreaFor(m => m.Notes, new { @class="form-control", rows="8", cols="10" })
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-6" >
                    <button type="submit" class="btn btn-primary">Update User</button>
                </div>
            </div>
        }
    </div>
    <div role="tabpanel" class="tab-pane " id="user-groups">
        <p>Below you will find the groups that this user belongs to. To add users to groups, please click on the 'Add User to Groups' link below. Note: No system generated groups will show up in the list below (i.e. Domain Users, Users).</p>
        <a href="#" id="add-user-to-groups"><span class="glyphicon glyphicon-plus"></span> Add User to Groups</a>
        <div id="add-user-to-groups-panel" style="display: none">
            <br />
            <p>To add new groups to this user, please use the text box below to search for and select the groups you wish to add. Once all of the group(s) have been added, please
            click on the 'Add Groups' button below.</p>
            @using(Html.BeginForm("AddUserToGroups", "Users", null, FormMethod.Post, new { @class="form-horizontal", role="form" }))
            {
                @Html.AntiForgeryToken()
                <div class="input-group col-sm-7">
                    <input type="text" id="search-groups" class="form-control" placeholder="Search For Groups ..." />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-info" id="btnAddNewGroup">Add New Group</button>
                    </span>
                </div>
                <br />
                <ul class="list-unstyled" id="new-groups-list" style="color: #1e4eb0; font-weight: bold; font-style: italic;">
                </ul>
                
                @Html.HiddenFor(m => m.SamAccountName)

                <div class="form-group">
                    <div class="col-sm-6" >
                        <button type="submit" class="btn btn-primary">Add Groups</button>
                    </div>
                </div>
            }
        </div>
        <br />
        <br />
        <div class="table-responsive">
            <table class="table table-bordered table-condensed table-hover">
                <thead>
                    <tr>
                        <th>Group Name</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var group in Model.UserGroups)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(@group.Key, "ViewGroup", "Groups", new { groupId = @group.Key }, null)
                            </td>
                            <td>
                                @group.Value
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div role="tabpanel" class="tab-pane " id="user-history">
        <p>Below you will find some the stats/history of this user.</p>
        <table style="width: 400px" class="table table-bordered table-condensed">
            <tr>
                <td>Created By</td>
                <td style="text-align: right">@Model.DBInfo.Createdby</td>
            </tr>
            <tr>
                <td>Created on</td>
                <td style="text-align: right">@Model.WhenCreated.ToLocalTime()</td>
            </tr>
            <tr>
                <td>Last Updated on</td>
                <td style="text-align: right">@Model.WhenChanged</td>
            </tr>
            <tr>
                <td>Logon Count</td>
                <td style="text-align: right">@Model.LogonCount</td>
            </tr>
            <tr>
                <td>Enabled <a href="#" data-toggle="tooltip" data-placement="right" data-original-title="Determines if a user account is enabled or not. If the account is enabled, the user is be able to login. If it's disabled, the user will no longer be able to login into the domain.'">(?)</a></td>
                <td style="text-align: right">@Model.Enabled</td>
            </tr>
            <tr>
                <td>Expiration Date</td>
                <td style="text-align: right">
                    @if(Model.ExpirationDate.HasValue) { @Model.ExpirationDate.Value.AddDays(-1).ToShortDateString() } else { <text>No Expiration Date</text> }
                </td>
            </tr>
        </table>

        @if(Model.UserHistory.Count > 0)
        {
            <table class="table table-bordered table-hover table-condensed">
                <thead>
                    <tr>
                        <th width="20%">Update Information</th>
                        <th width="80%">Update Details</th>
                    </tr>
                </thead>
                @foreach(var entry in Model.UserHistory)
                {
                    <tr>
                        <td>
                            <table style="font-size: 10pt; font-style: italic;">
                                <tr>
                                    <td>Date: @entry.DateUpdated.ToShortDateString()</td>
                                </tr>
                                <tr>
                                    <td>Update Type: @entry.UpdateType</td>

                                </tr>
                                <tr>
                                    <td>Updated by: @entry.UpdatedBy</td>
                                </tr>
                            </table>
                        </td>
                        <td>@(new HtmlString(entry.Notes))</td>
                    </tr>
                }
            </table>
        }
    </div>
</div>