@model ADWeb.Core.ViewModels.UserViewModel

@{
    Layout = "~/Views/Shared/_Users.cshtml";
    ViewBag.Title = Model.DisplayName;
}

<h2>@Model.GivenName @Model.MiddleName @Model.Surname</h2>
<p>Click on the tabs below to view the information for this user. <span class="pull-right">last updated @Model.WhenChanged</span></p>

@if(@TempData["user_updated_successfully"] != null)
{
    <div class="alert alert-info alert-dismissable fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span aria-hidden="true">&times;</span>
            <span class="sr-only">Close</span>
        </button>
        <span>@TempData["user_updated_successfully"]</span>
    </div>
}

<ul class="nav nav-tabs" role="tablist" id="userInfo">
    <li role="presentation" class="active">
        <a href="#basic-info" role="tab" data-toggle="tab">Basic Info</a>
    </li>
    <li role="presentation">
        <a href="#user-groups" role="tab" data-toggle="tab">User Groups</a>
    </li>
    <li role="presentation">
        <a href="#user-history" role="tab" data-toggle="tab">User History</a>
    </li>
</ul>

@section headSection {
    <style type="text/css">
    </style>
}

<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="basic-info">
        <p>Use the fields below to view and edit the information for this user. Note: When updating this users, all fields that are marked with an asterisk (*) are required fields.</p>

        @Html.ValidationSummary()
        @using(Html.BeginForm("UpdateUser", "Users", FormMethod.Post, new { @class="form-horizontal", role="form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="SamAccountName" class="col-sm-2 control-label">Username</label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.SamAccountName, new { @readonly="readonly", @class="form-control" })
                    <span class="help-block">To rename the account click @Html.ActionLink("here", "RenameUser", "Users", new { userId = Model.SamAccountName}, null).</span>
                </div>
            </div>
            
            <div class="form-group">
                <label for="FirstName" class="col-sm-2 control-label">First Name*</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.GivenName, new { @class="form-control", autofocus="autofocus" })
                    @Html.ValidationMessageFor(m => m.GivenName)
                </div>
            </div>
            
            <div class="form-group">
                <label for="MiddleName" class="col-sm-2 control-label">Middle Name</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.MiddleName, new { @class="form-control" })
                </div>
            </div>
            
            <div class="form-group">
                <label for="LastName" class="col-sm-2 control-label">Last Name*</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Surname, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.Surname)
                </div>
            </div>
            
            <div class="form-group">
                <label for="Displayname" class="col-sm-2 control-label">Display Name*</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.DisplayName, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.DisplayName)
                </div>
            </div>
            
            <div class="form-group">
                <label for="Email" class="col-sm-2 control-label">Email*</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.EmailAddress, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.EmailAddress)
                </div>
            </div>
            
            <div class="form-group">
                <label for="PhoneNumber" class="col-sm-2 control-label">Phone #</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class="form-control" })
                </div>
            </div>
            
            <div class="form-group">
                <label for="Title" class="col-sm-2 control-label">Title</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Title, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.Title)
                </div>
            </div>
                        
            <div class="form-group">
                <label for="Department" class="col-sm-2 control-label">Department</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Department, new { @class="form-control" })
                </div>
            </div>
            
            <div class="form-group">
                <label for="Company" class="col-sm-2 control-label">Company*</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Company, new { @class="form-control" })
                    @Html.ValidationMessageFor(m => m.Company)
                </div>
            </div>
            
            <div class="form-group">
                <label for="Notes" class="col-sm-2 control-label">Notes</label>
                <div class="col-sm-6">
                    @Html.TextAreaFor(m => m.Notes, new { @class="form-control", rows="8", cols="10" })
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-6" >
                    <button type="submit" class="btn btn-primary">Update User</button>
                </div>
            </div>
        }
    </div>
    <div role="tabpanel" class="tab-pane" id="user-groups">
        <p>Below you will find the groups that this user belongs to. Note: No system generated groups will show up in the list below (i.e. Domain Users, Users).</p>
        <div class="table-responsive">
            <table class="table table-bordered table-condensed table-hover">
                <thead>
                    <tr>
                        <th>Group Name</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var group in Model.UserGroups)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(@group.Key, "ViewGroup", "Groups", new { groupId = @group.Key }, null)
                            </td>
                            <td>
                                @group.Value
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div role="tabpanel" class="tab-pane" id="user-history">
        <p>User Created on @Model.WhenChanged</p>
    </div>
</div>
